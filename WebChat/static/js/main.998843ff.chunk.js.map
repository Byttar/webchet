{"version":3,"sources":["services/config.js","components/Message/index.tsx","services/remove.js","services/edit.js","components/Chat/index.tsx","services/insert.js","components/Login/index.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","Message","author","content","id","time","active","edited","deleteMessage","useCallback","key","updates","ref","update","removeMessage","EditMessage","newContent","prompt","editMessage","Message_from_user","localStorage","getItem","moment","Date","timestamp","getHours","getMinutes","className","style","marginRight","marginLeft","onClick","Chat","messageRef","child","useState","messages","setMessages","getLists","message","a","old","setLists","editedMessage","MessageIndex","findIndex","x","useEffect","orderByChild","on","data","_data","Object","assign","val","console","log","el","scrollTop","scrollHeight","map","onSubmit","event","preventDefault","ServerValue","TIMESTAMP","username","type","postData","push","writeNewMessage","currentTarget","MESSAGE","value","name","required","Login","user","setUser","to","pathname","state","e","USERNAME","setItem","textAlign","placeholder","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.998843ff.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC01v5GHcSKKTHdRMfrHdJGcxlIZVUN2nk\",\n    authDomain: \"trellinho.firebaseapp.com\",\n    databaseURL: \"https://trellinho.firebaseio.com\",\n    projectId: \"trellinho\",\n    storageBucket: \"trellinho.appspot.com\",\n    messagingSenderId: \"666173448044\",\n    appId: \"1:666173448044:web:ec225fa0fca8b2dfce1d49\",\n    measurementId: \"G-NXY3X0MJS6\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  export const database = firebase.database();","import React, { useCallback } from 'react';\nimport { editMessage } from \"../../services/edit\";\nimport { removeMessage } from \"../../services/remove\"\n\nimport \"./style.scss\";\n\ninterface IMessage{\n  author: string, \n  content: string,\n  id: string,\n  time: string,\n  active: number,\n  edited?: boolean\n}\n\nconst Message: React.FC<IMessage> = ({author, content, id, time, active, edited}) => {\n\n      const deleteMessage = useCallback((key:string) => {\n        removeMessage(key);\n      }, []);\n\n      const EditMessage = useCallback((key: string) => {\n\n        const newContent = prompt(\"Digite a nova mensagem\");\n        \n        if(newContent)\n        editMessage(key, newContent);\n      }, []);\n\n\n    let Message_from_user:boolean = localStorage.getItem('user') !== author; \n    let moment:Date = new Date(time);\n    let timestamp:string = `${moment.getHours()}:${moment.getMinutes() < 10 ? (\"0\" + moment.getMinutes()) : (\"\" + moment.getMinutes())}`;\n\n\n\n\n    return(\n      <div className=\"Message\">\n        <div style={!Message_from_user ? {marginLeft: 'auto'} : {marginRight: 'auto', marginLeft: '0'}}>\n          <p className=\"author\"> \n          {author}\n          <small>{(edited && active) && \"(editada)\"}</small>\n          </p>\n          <div>\n            <p className=\"mensagem_content\">{active ? content : \"Mensagem Excluida\"}</p>\n            <div className=\"time\">{timestamp}\n              { localStorage.getItem(\"user\") === author && active ? <div>\n                  <i className=\"fas fa-pen-square\" onClick={() => EditMessage(id)}></i>\n                  <i className=\"fas fa-window-close\" onClick={() => deleteMessage(id)}/>\n              </div> : \"\"\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Message;","import firebase from \"firebase\";\n\nexport function removeMessage(key) {\n    // A post entry.\n    \n    \n  \n    // Get a key for a new Post.\n    // var newPostKey = firebase.database().ref().child('Messages').push().key;\n  \n    // Write the new post's data simultaneously in the posts list and the user's post list.\n    var updates = {};\n    updates['/Messages/' + key + \"/active\"] = 0;\n    return firebase.database().ref().update(updates);\n  }","import firebase from \"firebase\";\n\nexport function editMessage(key, content) {\n    var updates = {};\n    updates['/Messages/' + key + \"/content\"] = content;\n    updates['/Messages/' + key + \"/edited\"] = 1;\n    return firebase.database().ref().update(updates);\n}","import React, { useEffect, useCallback, useState, FormEvent} from 'react';\nimport \"./style.scss\";\nimport { database } from \"../../services/config\"\nimport firebase from \"firebase\";\nimport Message from \"../Message/index\"\nimport { writeNewMessage } from \"../../services/insert\"\n\ninterface IMessage{\n  author: string, \n  content: string,\n  key: string,\n  time: string,\n  active: number,\n  edited?: boolean\n}\n\nconst Chat: React.FC = () => {\n\n  const messageRef = database.ref().child(\"Messages\");\n  const [messages, setMessages] = useState<Array<IMessage>>([]);\n\n  const HandleSubmit = (event:FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    let time = firebase.database.ServerValue.TIMESTAMP;\n    writeNewMessage(localStorage.getItem('user'), event.currentTarget.MESSAGE.value, \"text\", time);\n    event.currentTarget.MESSAGE.value = \"\";\n  }\n\n  const getLists = useCallback(async (message:IMessage) => {\n    setMessages((old:Array<IMessage>) => [...old, message]);\n  }, [setMessages])\n\n  const setLists = useCallback(async (message:IMessage) => {\n    const editedMessage:Array<IMessage> = [...messages];\n\n    const MessageIndex = messages.findIndex(x => x.key === message.key);\n    editedMessage[MessageIndex] = message;\n    setMessages(editedMessage);\n    \n  }, [messages])\n\n  useEffect(() => {\n    \n    messageRef.orderByChild(\"time\").on('child_changed', function(data){\n      const _data:IMessage = Object.assign(data.val(), {key : data.key})\n      setLists(_data);\n      console.log('changed');\n   });\n\n  }, [setLists, messageRef]);\n\n  useEffect(() => {\n    messageRef.orderByChild(\"time\").on('child_added', function(data){\n          const _data:IMessage = Object.assign(data.val(), {key : data.key})\n          getLists(_data);\n      });\n  }, [getLists]);\n\n  return (\n    <div className=\"Chat\">\n      <div className=\"Messages\" ref={el => {if(el) el.scrollTop = el.scrollHeight}}>\n        {\n          messages && messages.map((message: IMessage) => {  \n          \n          return <Message\n              author={message.author}\n              content={message.content}\n              time={message.time} key={message.key}\n              id={message.key} active={message.active}\n              edited={message.edited}\n            />\n          })\n        }\n      </div > \n      <form className=\"SEND_MESSAGE\" onSubmit={HandleSubmit}>\n        <input type=\"text\" name=\"MESSAGE\" required/>\n        <button><i className=\"fas fa-share\"></i></button>\n      </form>\n    </div>\n  );\n}\n\nexport default Chat;","import firebase from \"firebase\";\n\nexport function writeNewMessage(username, content, type, time) {\n    // A post entry.\n    var postData = {\n      author: username,\n      content,\n      type,\n      time,\n      active: 1\n    };\n  \n    // Get a key for a new Post.\n    var newPostKey = firebase.database().ref().child('Messages').push().key;\n  \n    // Write the new post's data simultaneously in the posts list and the user's post list.\n    var updates = {};\n    updates['/Messages/' + newPostKey] = postData;\n  \n    return firebase.database().ref().update(updates);\n  }","import React, { useState, FormEvent } from 'react';\nimport \"./style.scss\";\nimport { Redirect } from \"react-router-dom\"\n\nconst Login: React.FC = () => {\n\n    const [user, setUser] = useState<string>();\n\n    const HandleSubmit = (e:FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const user =  e.currentTarget.USERNAME.value;\n        localStorage.setItem(\"user\", user);\n        setUser(user);\n    }\n\n    return(\n        <div className=\"login\">\n            { user && <Redirect to={{pathname: \"/chat\", state: {user}}}/> }\n            <form onSubmit={HandleSubmit}>\n            <h1 style={{textAlign: \"center\"}}>WebChet</h1>\n                <label>\n                    <i className=\"fas fa-user\"></i>\n                    <input required name=\"USERNAME\" placeholder=\"Digite Seu Nome\"/>\n                </label>\n                <button>Entrar</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport Chat from \"./components/Chat\"\nimport Login from \"./components/Login\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n    <Switch>\n      <Route path=\"/chat\">\n        {\n            <Chat />\n        }\n      </Route>\n      <Route path=\"/login\">\n        { !localStorage.getItem(\"user\") ?\n          <Login />\n        :\n          <Redirect to=\"/chat\"/>\n        }\n      </Route>\n      <Route path=\"/\">\n       <Redirect to=\"/login\"/>\n      </Route>\n    </Switch>\n\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}